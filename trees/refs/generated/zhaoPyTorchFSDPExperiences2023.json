[{"abstract": "It is widely acknowledged that large models have the potential to deliver superior performance across a broad range of domains. Despite the remarkable progress made in the field of machine learning systems research, which has enabled the development and exploration of large models, such abilities remain confined to a small group of advanced users and industry leaders, resulting in an implicit technical barrier for the wider community to access and leverage these technologies. In this paper, we introduce PyTorch Fully Sharded Data Parallel (FSDP) as an industry-grade solution for large model training. FSDP has been closely co-designed with several key PyTorch core components including Tensor implementation, dispatcher system, and CUDA memory caching allocator, to provide non-intrusive user experiences and high training efficiency. Additionally, FSDP natively incorporates a range of techniques and settings to optimize resource utilization across a variety of hardware configurations. The experimental results demonstrate that FSDP is capable of achieving comparable performance to Distributed Data Parallel while providing support for significantly larger models with near-linear scalability in terms of TFLOPS.", "accessed": {"date-parts": [[2024, 9, 6]]}, "author": [{"family": "Zhao", "given": "Yanli"}, {"family": "Gu", "given": "Andrew"}, {"family": "Varma", "given": "Rohan"}, {"family": "Luo", "given": "Liang"}, {"family": "Huang", "given": "Chien-Chin"}, {"family": "Xu", "given": "Min"}, {"family": "Wright", "given": "Less"}, {"family": "Shojanazeri", "given": "Hamid"}, {"family": "Ott", "given": "Myle"}, {"family": "Shleifer", "given": "Sam"}, {"family": "Desmaison", "given": "Alban"}, {"family": "Balioglu", "given": "Can"}, {"family": "Damania", "given": "Pritam"}, {"family": "Nguyen", "given": "Bernard"}, {"family": "Chauhan", "given": "Geeta"}, {"family": "Hao", "given": "Yuchen"}, {"family": "Mathews", "given": "Ajit"}, {"family": "Li", "given": "Shen"}], "container-title": "arXiv.org", "id": "zhaoPyTorchFSDPExperiences2023", "issued": {"date-parts": [[2023, 4]]}, "language": "en-US", "publisher": "https://arxiv.org/abs/2304.11277v2", "title": "PyTorch FSDP: Experiences on Scaling Fully Sharded Data Parallel", "title-short": "PyTorch FSDP", "type": "", "original_bibtex": "@misc{zhaoPyTorchFSDPExperiences2023,\n title = {{{PyTorch FSDP}}: {{Experiences}} on {{Scaling Fully Sharded Data Parallel}}},\n author = {Zhao, Yanli and Gu, Andrew and Varma, Rohan and Luo, Liang and Huang, Chien-Chin and Xu, Min and Wright, Less and Shojanazeri, Hamid and Ott, Myle and Shleifer, Sam and Desmaison, Alban and Balioglu, Can and Damania, Pritam and Nguyen, Bernard and Chauhan, Geeta and Hao, Yuchen and Mathews, Ajit and Li, Shen},\n year = {2023},\n urldate = {2024-09-06},\n howpublished = {https://arxiv.org/abs/2304.11277v2},\n journal = {arXiv.org},\n file = {/home/kellen/Zotero/storage/C7SNWUS4/Zhao et al. - 2023 - PyTorch FSDP Experiences on Scaling Fully Sharded Data Parallel.pdf},\n langid = {english},\n abstract = {It is widely acknowledged that large models have the potential to deliver superior performance across a broad range of domains. Despite the remarkable progress made in the field of machine learning systems research, which has enabled the development and exploration of large models, such abilities remain confined to a small group of advanced users and industry leaders, resulting in an implicit technical barrier for the wider community to access and leverage these technologies. In this paper, we introduce PyTorch Fully Sharded Data Parallel (FSDP) as an industry-grade solution for large model training. FSDP has been closely co-designed with several key PyTorch core components including Tensor implementation, dispatcher system, and CUDA memory caching allocator, to provide non-intrusive user experiences and high training efficiency. Additionally, FSDP natively incorporates a range of techniques and settings to optimize resource utilization across a variety of hardware configurations. The experimental results demonstrate that FSDP is capable of achieving comparable performance to Distributed Data Parallel while providing support for significantly larger models with near-linear scalability in terms of TFLOPS.},\n month = {April},\n shorttitle = {{{PyTorch FSDP}}}\n}\n"}]