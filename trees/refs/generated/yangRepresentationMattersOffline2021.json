[{"ISSN": "2640-3498", "abstract": "The recent success of supervised learning methods on ever larger offline datasets has spurred interest in the reinforcement learning (RL) field to investigate whether the same paradigms can be translated to RL algorithms. This research area, known as offline RL, has largely focused on offline policy optimization, aiming to find a return-maximizing policy exclusively from offline data. In this paper, we consider a slightly different approach to incorporating offline data into sequential decision-making. We aim to answer the question, what unsupervised objectives applied to offline datasets are able to learn state representations which elevate performance on downstream tasks, whether those downstream tasks be online RL, imitation learning from expert demonstrations, or even offline policy optimization based on the same offline dataset? Through a variety of experiments utilizing standard offline RL datasets, we find that the use of pretraining with unsupervised learning objectives can dramatically improve the performance of policy learning algorithms that otherwise yield mediocre performance on their own. Extensive ablations further provide insights into what components of these unsupervised objectives {\u2013} e.g., reward prediction, continuous or discrete representations, pretraining or finetuning {\u2013} are most important and in which settings.", "accessed": {"date-parts": [[2024, 9, 8]]}, "author": [{"family": "Yang", "given": "Mengjiao"}, {"family": "Nachum", "given": "Ofir"}], "container-title": "Proceedings of the 38th International Conference on Machine Learning", "id": "yangRepresentationMattersOffline2021", "issued": {"date-parts": [[2021, 7]]}, "language": "en-US", "page": "11784-11794", "publisher": "PMLR", "title": "Representation Matters: Offline Pretraining for Sequential Decision Making", "title-short": "Representation Matters", "type": "paper-conference", "original_bibtex": "@inproceedings{yangRepresentationMattersOffline2021,\n title = {Representation {{Matters}}: {{Offline Pretraining}} for {{Sequential Decision Making}}},\n author = {Yang, Mengjiao and Nachum, Ofir},\n year = {2021},\n urldate = {2024-09-08},\n booktitle = {Proceedings of the 38th {{International Conference}} on {{Machine Learning}}},\n pages = {11784--11794},\n publisher = {PMLR},\n file = {/home/kellen/Zotero/storage/B54IUCU7/Yang and Nachum - 2021 - Representation Matters Offline Pretraining for Sequential Decision Making.pdf;/home/kellen/Zotero/storage/BANYUMGT/Yang and Nachum - 2021 - Representation Matters Offline Pretraining for Sequential Decision Making.pdf},\n langid = {english},\n abstract = {The recent success of supervised learning methods on ever larger offline datasets has spurred interest in the reinforcement learning (RL) field to investigate whether the same paradigms can be translated to RL algorithms. This research area, known as offline RL, has largely focused on offline policy optimization, aiming to find a return-maximizing policy exclusively from offline data. In this paper, we consider a slightly different approach to incorporating offline data into sequential decision-making. We aim to answer the question, what unsupervised objectives applied to offline datasets are able to learn state representations which elevate performance on downstream tasks, whether those downstream tasks be online RL, imitation learning from expert demonstrations, or even offline policy optimization based on the same offline dataset? Through a variety of experiments utilizing standard offline RL datasets, we find that the use of pretraining with unsupervised learning objectives can dramatically improve the performance of policy learning algorithms that otherwise yield mediocre performance on their own. Extensive ablations further provide insights into what components of these unsupervised objectives \\{--\\} e.g., reward prediction, continuous or discrete representations, pretraining or finetuning \\{--\\} are most important and in which settings.},\n issn = {2640-3498},\n month = {July},\n shorttitle = {Representation {{Matters}}}\n}\n"}]